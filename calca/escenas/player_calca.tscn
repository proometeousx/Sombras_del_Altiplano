[gd_scene load_steps=79 format=3 uid="uid://cra2fcp1dddgm"]

[ext_resource type="Texture2D" uid="uid://b0720wro4rfcg" path="res://calca/calca-sprintsheet.png" id="1_tu7p3"]

[sub_resource type="GDScript" id="GDScript_2bxub"]
script/source = "extends CharacterBody2D

const WALK_SPEED := 140.0
const RUN_SPEED  := 260.0
const JUMP_VELOCITY := -400.0
const JUMP_LARGE_VELOCITY := -520.0

# Multiplicadores del barrido seg√∫n estado al iniciar (separados para que se note)
const CROUCH_SWEEP_MULT_WALK := 0.90
const CROUCH_SWEEP_MULT_RUN  := 1.35  # subido para que el ‚Äúcorriendo‚Äù recorra m√°s

@onready var anim: AnimatedSprite2D = $AnimatedSprite2D

@onready var col_stand  = $CollisionShape2D
@onready var col_crouch = $CollisionShape2D_crouch
@onready var col_jump   = $CollisionShape2D_jump

var is_punching: bool = false
var is_crouching_once: bool = false
var is_jumping_once: bool = false

var punch_last_frame: int = 0
var crouch_last_frame: int = 0
var jump_last_frame: int = 0

var crouch_dir: float = 1.0
var crouch_sweep_speed: float = 0.0

func _ready() -> void:
	_set_collider_stand()

func _physics_process(delta: float) -> void:
	# Gravedad
	if not is_on_floor():
		velocity += get_gravity() * delta

	# ===== INPUTS =====
	var jump_large_pressed: bool = Input.is_action_just_pressed(\"jump_large_key\")  # SPACE
	var jump_pressed: bool      = Input.is_action_just_pressed(\"jump_key\")         # W
	var crouch_pressed: bool    = Input.is_action_just_pressed(\"crouch_key\")       # S
	var punch_pressed: bool     = Input.is_action_just_pressed(\"punch_key\")        # J

	var move_left: bool  = Input.is_action_pressed(\"move_left\")   # A
	var move_right: bool = Input.is_action_pressed(\"move_right\")  # D
	var run_pressed: bool = Input.is_action_pressed(\"run_key\")    # SHIFT

	var dir: float = 0.0
	if move_left:  dir -= 1.0
	if move_right: dir += 1.0

	# ===== Estado instant√°neo √∫til para el barrido =====
	var is_moving_now: bool = move_left or move_right
	var speed_mag: float = abs(velocity.x)             # inercia del frame anterior
	var looks_left: bool = anim.flip_h

	# =========================================================
	# PRIORIDADES (just_pressed primero):
	# 1) jump_large  2) jump  3) crouch  4) punch  5) mover
	# =========================================================

	# 1) SALTO GRANDE
	if jump_large_pressed and is_on_floor():
		_cancel_actions()
		is_jumping_once = true
		_set_collider_jump()
		velocity.y = JUMP_LARGE_VELOCITY
		anim.play(\"jump_large\")
		jump_last_frame = anim.sprite_frames.get_frame_count(\"jump_large\") - 1

	# 2) SALTO NORMAL
	elif jump_pressed and is_on_floor():
		_cancel_actions()
		is_jumping_once = true
		_set_collider_jump()
		velocity.y = JUMP_VELOCITY
		anim.play(\"jump\")
		jump_last_frame = anim.sprite_frames.get_frame_count(\"jump\") - 1

	# 3) CROUCH (BARRIDO) ‚Äî prioridad sobre mover si se presion√≥ este frame
	elif crouch_pressed and is_on_floor():
		_cancel_actions()
		is_crouching_once = true
		_set_collider_crouch()
		anim.play(\"crouch\")
		crouch_last_frame = anim.sprite_frames.get_frame_count(\"crouch\") - 1

		# Direcci√≥n del barrido seg√∫n mirada actual
		crouch_dir = -1.0 if looks_left else 1.0

		# Detectar si ven√≠a \"corriendo\" al iniciar (o con inercia alta)
		var is_running_now: bool = run_pressed and is_moving_now
		var was_running: bool = is_running_now or (speed_mag >= RUN_SPEED * 0.40)  # umbral bajo para capturar inercia

		# Base = m√°ximo entre velocidad actual y baseline WALK/RUN
		var baseline: float = (RUN_SPEED if was_running else WALK_SPEED)
		var base: float = max(speed_mag, baseline)

		# Multiplicador seg√∫n estado (m√°s largo si corr√≠a)
		var mult: float = (CROUCH_SWEEP_MULT_RUN if was_running else CROUCH_SWEEP_MULT_WALK)

		# Velocidad final del deslizamiento
		crouch_sweep_speed = base * mult

	# 4) PUNCH ‚Äî prioridad sobre mover si se presion√≥ este frame
	elif punch_pressed and is_on_floor():
		_cancel_actions()
		_set_collider_stand()
		is_punching = true
		anim.play(\"punch\")
		punch_last_frame = anim.sprite_frames.get_frame_count(\"punch\") - 1
		velocity.x = move_toward(velocity.x, 0, RUN_SPEED)

	# 5) MOVER
	elif is_moving_now:
		# üëá AQU√ç ESTABA EL PROBLEMA: si ven√≠amos de punch/crouch hay que limpiarlos
		_cancel_ground_actions()              # limpia punch y crouch, NO el salto
		if not is_jumping_once and is_on_floor():
			_set_collider_stand()
		var speed: float = (RUN_SPEED if run_pressed else WALK_SPEED)
		velocity.x = dir * speed
		anim.flip_h = dir < 0
		if is_on_floor() and not is_jumping_once:
			anim.play(\"run\" if run_pressed else \"walk\")

	else:
		# sin acci√≥n -> collider normal
		if not is_punching and not is_crouching_once and is_on_floor():
			_set_collider_stand()
			velocity.x = move_toward(velocity.x, 0, RUN_SPEED)
			if abs(velocity.x) < 1.0:
				anim.play(\"idle\")

	# ===== BARRIDO ACTIVO: deslizar mientras dura crouch =====
	if is_crouching_once and anim.animation == \"crouch\":
		velocity.x = crouch_dir * crouch_sweep_speed

	# ===== ANIMACI√ìN DE SALTO EN PROGRESO =====
	if is_jumping_once and (anim.animation == \"jump\" or anim.animation == \"jump_large\"):
		_set_collider_jump()  # se mantiene el collider de salto

	move_and_slide()

	# ===== Liberar acciones por frame (one-shot real) =====
	if is_punching and anim.animation == \"punch\":
		if anim.frame >= punch_last_frame:
			is_punching = false
			_set_collider_stand()

	if is_crouching_once and anim.animation == \"crouch\":
		if anim.frame >= crouch_last_frame:
			is_crouching_once = false
			_set_collider_stand()
			
	# fin del salto (ahora depende de la animaci√≥n, no del piso)
	if is_jumping_once and (anim.animation == \"jump\" or anim.animation == \"jump_large\"):
		if anim.frame >= jump_last_frame:
			is_jumping_once = false
			_set_collider_stand()

func _cancel_actions() -> void:
	is_punching = false
	is_crouching_once = false
	is_jumping_once = false
	
# cancela solo lo que est√° en el piso (punch/crouch) pero NO el salto
# esto es lo que usamos al movernos
func _cancel_ground_actions() -> void:
	is_punching = false
	is_crouching_once = false
	# is_jumping_once queda como est√°	
	
func _set_collider_stand() -> void:
	col_stand.disabled  = false
	col_crouch.disabled = true
	col_jump.disabled   = true

func _set_collider_crouch() -> void:
	col_stand.disabled  = true
	col_crouch.disabled = false
	col_jump.disabled   = true

func _set_collider_jump() -> void:
	col_stand.disabled  = true
	col_crouch.disabled = true
	col_jump.disabled   = false
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vqcv1"]
size = Vector2(36.25, 74)

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_rp1rb"]
radius = 14.0
height = 72.0

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_84wlu"]
radius = 22.0
height = 68.0

[sub_resource type="AtlasTexture" id="AtlasTexture_30f5m"]
atlas = ExtResource("1_tu7p3")
region = Rect2(384, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ux665"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_yn75t"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_g1iyo"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_cih8q"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_saveu"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_crkbx"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gu3r3"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gim32"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ncxsw"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gbn47"]
atlas = ExtResource("1_tu7p3")
region = Rect2(384, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_wskfs"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_35gxv"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7s7lh"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_heh76"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qkajn"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_y338o"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8o3wn"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_mtybm"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_m8jkw"]
atlas = ExtResource("1_tu7p3")
region = Rect2(384, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_w0ruy"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_asxeb"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_hpb2g"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 576, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ge354"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 576, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ae8wp"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ja5c8"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_nrg15"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_i4ac5"]
atlas = ExtResource("1_tu7p3")
region = Rect2(384, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_6nxfj"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_tovrv"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ffhsa"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_yjwfd"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_evirn"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_u688e"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_hwtos"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_6tgys"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gnt2t"]
atlas = ExtResource("1_tu7p3")
region = Rect2(384, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_2rakm"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_cfayb"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_tldco"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_slkpe"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_dqhk7"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ya2ee"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_klojs"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_v4mmu"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_tayt7"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_cwkxu"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qd5fp"]
atlas = ExtResource("1_tu7p3")
region = Rect2(384, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_i04mt"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_4v4ub"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kdj43"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ddygq"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_38qy1"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bh34m"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_iyly3"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5tage"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_lrtit"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_d12uj"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_aqne6"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_jakjo"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_41l7i"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5mbif"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_02rwg"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kplei"]
atlas = ExtResource("1_tu7p3")
region = Rect2(320, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_38lxp"]
atlas = ExtResource("1_tu7p3")
region = Rect2(384, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_4tryw"]
atlas = ExtResource("1_tu7p3")
region = Rect2(448, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kw4tn"]
atlas = ExtResource("1_tu7p3")
region = Rect2(512, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ecxtg"]
atlas = ExtResource("1_tu7p3")
region = Rect2(0, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_fbd7o"]
atlas = ExtResource("1_tu7p3")
region = Rect2(64, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_wmt25"]
atlas = ExtResource("1_tu7p3")
region = Rect2(128, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qj5vq"]
atlas = ExtResource("1_tu7p3")
region = Rect2(192, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ugco8"]
atlas = ExtResource("1_tu7p3")
region = Rect2(256, 128, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_x6s1d"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_30f5m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ux665")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yn75t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g1iyo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cih8q")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_saveu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_crkbx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gu3r3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gim32")
}],
"loop": true,
"name": &"crouch",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ncxsw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gbn47")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wskfs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_35gxv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7s7lh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_heh76")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qkajn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y338o")
}],
"loop": true,
"name": &"damage",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_8o3wn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mtybm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m8jkw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_w0ruy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_asxeb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hpb2g")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ge354")
}],
"loop": true,
"name": &"dead",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ae8wp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ja5c8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nrg15")
}],
"loop": true,
"name": &"idle",
"speed": 2.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_i4ac5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6nxfj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tovrv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ffhsa")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yjwfd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_evirn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_u688e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hwtos")
}],
"loop": true,
"name": &"jump",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_6tgys")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gnt2t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2rakm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cfayb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tldco")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_slkpe")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dqhk7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ya2ee")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_klojs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v4mmu")
}],
"loop": true,
"name": &"jump_large",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tayt7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cwkxu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qd5fp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i04mt")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4v4ub")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kdj43")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ddygq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_38qy1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bh34m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_iyly3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5tage")
}],
"loop": true,
"name": &"punch",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_lrtit")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_d12uj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_aqne6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jakjo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_41l7i")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5mbif")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_02rwg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kplei")
}],
"loop": true,
"name": &"run",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_38lxp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4tryw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kw4tn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ecxtg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fbd7o")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wmt25")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qj5vq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ugco8")
}],
"loop": true,
"name": &"walk",
"speed": 12.0
}]

[node name="CharacterBody2D" type="CharacterBody2D"]
script = SubResource("GDScript_2bxub")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(545, 295)
shape = SubResource("RectangleShape2D_vqcv1")
debug_color = Color(0.77347, 0.419392, 0.385667, 0.42)

[node name="CollisionShape2D_crouch" type="CollisionShape2D" parent="."]
position = Vector2(548, 318)
rotation = 4.71239
shape = SubResource("CapsuleShape2D_rp1rb")

[node name="CollisionShape2D_jump" type="CollisionShape2D" parent="."]
position = Vector2(546, 257)
shape = SubResource("CapsuleShape2D_84wlu")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
position = Vector2(546, 270)
scale = Vector2(1.74414, 1.89453)
sprite_frames = SubResource("SpriteFrames_x6s1d")
animation = &"crouch"
frame_progress = 0.605228
